{"text": "Sams.EventListener.ActiveMQ.Consumer, The EventListener listen to message received on a Appach Active MQ. It has to be used as SourceConnector.     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: Host, Port, Address, UserName, Password, Root, Selector", "title": "", "_id": 0}
{"text": "Sams.EventListener.AQMessaging.Subscriber, This  Event  lisntener  connects  to  an  oracle  Database  and  listen  to  a  queue  for  message  using  a  .Net  Data  Provider  and executes the entity instructions. The connector check entity structure.     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: DatabaseProvider, ConnectionString, Queue_name, Root", "title": "", "_id": 1}
{"text": "Sams.EventListener.AMQP.Receiver, [Source]The EventListener get all messages define in an Artemis specified queue     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: Uri, Address, PoolingTime, Root", "title": "", "_id": 2}
{"text": "Sams.EventListener.File.FileSystemWatcher, The EventListener listen to any 'File Creation' and raises event if any. It cannot be used as SourceConnector. NOTE : This event       only       watch       for       a       Windows       System       event.       To       watch       periodically,       please       use Sams.EventListener.Scheduler.QuartzScheduler     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: Folder, Filter, IsScanSubDirectories, ExecuteOnStart, ReconnectionTimeDelay, Conditions[directory.opera tional], Conditions[directory.isemp ty], Conditions[now.match]", "title": "", "_id": 3}
{"text": "Sams.EventListener.HTTP.WebServer, [Source]The EventListener raises an event based on a Soap Service. 4 Methods exposed : (1) It can receive an XML tree with sendXml method (With or without transaction id). (2) It can receive a JSON string with sendJson method (With or without transaction id). WSDL is also exposed. After setting the Tasks, always test it : Start SAMS, and use a Web Browser and enter the url with a WSDL using http://url_defined_in_Uri:port?WSDL the server must answer with an xml file containing the WSDL (detail of all soap operations and requests available)     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: Uri, Username, Password, Root, XslResponseFilePath", "title": "", "_id": 4}
{"text": "Sams.EventListener.Irc.Receive, [Source]The EventListener raises an event when a msg is received by IRC. It can be used as SourceConnector or not.     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: Server, Port, NickName", "title": "", "_id": 5}
{"text": "Sams.EventListener.MQTT.Broker, The EventListener listen to any 'File Creation' and raises event if any. It cannot be used as SourceConnector.     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: IP, Port, TLS_Port, User_Name, User_Password, Heartbeat", "title": "", "_id": 6}
{"text": "Sams.EventListener.MQTT.Subscriber, The EventListener listen to any 'File Creation' and raises event if any. It cannot be used as SourceConnector.     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: Host, Port, Protocol, Encryption, Client_ID, User_Name, User_Password, Encryption_Protocol, Base_Path, Proxy_Url, Topics, ContentType, Keep_Alive_Send_Interval", "title": "", "_id": 7}
{"text": "Sams.EventListener.OPC.Subscriber(Customer Connector), Subscribe to data change of OPC tags from the targeted OPC Server     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: Uri, TagNames, SecurityMode, ByPassCertification, ConditionOpperand, ConditionValue, UpdateRate", "title": "", "_id": 8}
{"text": "Sams.EventListener.SAP.RfcService, [Source]The  EventListener  register  itself  to  a  SAP  Gateway.  ONLY  ONE  INSTANCE  OF  THIS  EVENTLISTENER  IS SUPPORTED. USING MORE THAN ONE INSTANCE WILL RAISE SOME UNPREDICTABLE RESULTS.     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: Dest_AppServerHost, Dest_SystemNumber, Dest_SystemID, Dest_User, Dest_Password, Dest_Client, Dest_Language, Dest_PoolSize, Dest_SAPRouter, Serv_GatewayHost, Serv_GatewayService, Serv_ProgramID, Serv_RegistrationCount, Serv_SAPRouter", "title": "", "_id": 9}
{"text": "Sams.EventListener.Scheduler.QuartzScheduler, The EventListener raises an event based on Quartz Scheduler configuration. It cannot be used as SourceConnector.     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: CronExpression, Conditions[directory.opera tional], Conditions[directory.isemp ty], Conditions[now.match]", "title": "", "_id": 10}
{"text": "Sams.EventListener.Soap.SecureWebServer, [Source]The EventListener raises an event based on a Soap Service using HTTPS. 4 Methods exposed : (1) It can receive an XML tree with sendXml method (With or without transaction id). (2) It can receive a JSON string with sendJson method (With or without transaction id). WSDL is also exposed. Do not forget to Bind the port defined in the Uri with the selected Certificate. Check the binding on the port (ex. port:443) using following command prompt 'netsh http show sslcert ipport=0.0.0.0:443' as Administrator. After setting the Tasks, always test it : Start SAMS, and use a Web Browser and enter the url with a WSDL using https://url_defined_in_Uri:port?WSDL the server must answer with an xml file containing the WSDL (detail of all soap operations and requests available)     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: Uri, Certificate, Username, Password, ListenUri", "title": "", "_id": 11}
{"text": "Sams.EventListener.Soap.WebServer, [Source]The EventListener raises an event based on a Soap Service. 4 Methods exposed : (1) It can receive an XML tree with sendXml method (With or without transaction id). (2) It can receive a JSON string with sendJson method (With or without transaction id). WSDL is also exposed. After setting the Tasks, always test it : Start SAMS, and use a Web Browser and enter the url with a WSDL using http://url_defined_in_Uri:port?WSDL the server must answer with an xml file containing the WSDL (detail of all soap operations and requests available)     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: Uri, Conditions[directory.opera tional], Conditions[directory.isemp ty], Conditions[now.match]", "title": "", "_id": 12}
{"text": "Sams.EventListener.Wcf.RestService, [Source]The  EventListener  raises  an  event  based  on  a  Simple  WCF  Service.  2  utilisation  modes  :  (1)  It  can  be  used  as SourceConnector.  it  is  possible  to  pass  until  5  parameters  in  the  url,  these  parameters  will  be  treated  as  an  entity  by  the RestService  EventListener  http://localhost:8090/Sams.EventListener.Wcf.RestService/RaiseEvent/p1/p2/p3/p4/p5.  (2)  It  can be only used as EventListener http://localhost:8090/Sams.EventListener.Wcf.RestService/RaiseEvent/.     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: Uri, Conditions[directory.opera tional], Conditions[directory.isemp ty], Conditions[now.match]", "title": "", "_id": 13}
{"text": "Sams.EventListener.Wcf.SimpleService, [Source]The  EventListener  raises  an  event  based  on  a  Simple  WCF  Service.  It  can  be  used  as  SourceConnector (SendXElement method with XElement as parameter) or not (RaiseEvent method).     , attributes: id, FullName, UseAsSourceConnector, WaitLatecomerEventTimer, configuration: Uri, Conditions[directory.opera tional], Conditions[directory.isemp ty], Conditions[now.match]", "title": "", "_id": 14}
{"text": "Sams.Connector.Database.Source.Select, This connector connects to any Database using a .Net Data Provider and executes a SELECT statement to fill new entities. The connector does not check any additional security constraints.If deletion is authorized for the user used, deletion can be executed from the SQL command.     , attributes: id, FullName, configuration: DatabaseProvider, ConnectionString, SelectQuery, RootName", "title": "", "_id": 15}
{"text": "Sams.Connector.Database.Source.SelectDb2, This connector connects to bd2 Database using a .Net specific Provider and executes a SELECT statement to fill new entities. The connector does not check any additional security constraints.If deletion is authorized for the user used, deletion can be executed from the SQL command.     , attributes: id, FullName, configuration: ConnectionString, SelectQuery, RootName", "title": "", "_id": 16}
{"text": "Sams.Connector.Database.Source.SelectPG, This connector connects to PostgreSQL Database using a .Net specific Provider and executes a SELECT statement to fill new  entities.  The  connector  does  not  check  any  additional  security  constraints.If  deletion  is  authorized  for  the  user  used, deletion can be executed from the SQL command.     , attributes: id, FullName, configuration: ConnectionString, SelectQuery, RootName", "title": "", "_id": 17}
{"text": "Sams.Connector.eBR.Source.XsiDatabase, The  Connector  is  a  SIMATIC  IT  eBR  XSI  Source  Connector.  XsiTransactions  TRANSAC  that  are  linked  to  at  least  one RETRY or READY XsiEntities are loaded from XSI and used as input entities. Status of XsiEntities is changed to WORKING during the treatment, until the end of Sams Job, and END or ERROR is any error occured during the Task.     , attributes: id, FullName, configuration: DatabaseProvider, ConnectionString, InvalidEntityRepository, TransferType, TransferFilter", "title": "", "_id": 18}
{"text": "Sams.Connector.eBR.Source.XsiPGDatabase, The  Connector  is  a  SIMATIC  IT  eBR  XSI  Source  Connector.  XsiTransactions  TRANSAC  that  are  linked  to  at  least  one RETRY or READY XsiEntities are loaded from XSI and used as input entities. Status of XsiEntities is changed to WORKING during the treatment, until the end of Sams Job, and END or ERROR is any error occured during the Task.     , attributes: id, FullName, configuration: DatabaseProvider, ConnectionString, InvalidEntityRepository, TransferType, TransferFilter", "title": "", "_id": 19}
{"text": "Sams.Connector.File.Source.Binary, The  Connector  browse  all  files  which  match  the  filters;  each  file  is  used  as  a  new  entity.  Files  are  processed  ordered  by Name.     , attributes: id, FullName, configuration: FilePath, LastMinutes, AllSubDirectories", "title": "", "_id": 20}
{"text": "Sams.Connector.File.Source.FileProperties, The Connector browse all files which match the filters; It saved properties [FileName, FilePath, LastModifiedDate, Length] in XML entity. Files are processed ordered by Name.     , attributes: id, FullName, configuration: FilePath, LastMinutes, FileNbRestriction", "title": "", "_id": 21}
{"text": "Sams.Connector.File.Source.Csv, The Connector open flat files that match the filters. The message list is the list of each line of each files. Files are processed ordered by name.     , attributes: id, FullName, configuration: FilePath, LastMinutes, CodePage, Separators, TextDelimiters, IgnoreHF, ColumnsNamePosition, AllSubDirectories, ArchiveFolder", "title": "", "_id": 22}
{"text": "Sams.Connector.File.Source.Json, The Connector open Json files that match the filters. The message list is the list of each Json file. Files are processed ordered by name.     , attributes: id, FullName, configuration: FilePath, Root, LastMinutes, AllSubDirectories, ArchiveFolder", "title": "", "_id": 23}
{"text": "Sams.Connector.File.Source.Text, The Connector open flat files that match the filters. The message list is the list of each line of each files. Files are processed ordered by name.     , attributes: id, FullName, configuration: FilePath, LastMinutes, CodePage, AllSubDirectories, ArchiveFolder", "title": "", "_id": 24}
{"text": "Sams.Connector.File.Source.Xml, The Connector open UTF-8 Xml files that match the filters. The message list is the list of each Xml file. Files are processed ordered by name.     , attributes: id, FullName, configuration: FilePath, LastMinutes, XsdFilePath, AllSubDirectories, ArchiveFolder", "title": "", "_id": 25}
{"text": "Sams.Connector.Odata.Source.GetPayload, Call an OData Webservice and return response     , attributes: id, FullName, configuration: URL, User, Password", "title": "", "_id": 26}
{"text": "Sams.Connector.OPC.Source.Read(Customer Connector), Read OPC tags from the targeted OPC Server     , attributes: id, FullName, configuration: Uri, TagNames, SecurityMode, ByPassCertification", "title": "", "_id": 27}
{"text": "Sams.Connector.SAP.Source.CnxTest, This connector test connects to SAP through RFC connection.     , attributes: id, FullName, configuration: AppServerHost, SystemNumber, SystemID, User, Password, Client, Language, PoolSize", "title": "", "_id": 28}
{"text": "Sams.Connector.SAP.Source.Rfc, This connector connects to SAP through RFC connection.     , attributes: id, FullName, configuration: AppServerHost, SystemNumber, SystemID, User, Password, Client, Language, PoolSize, instructionFilePath", "title": "", "_id": 29}
{"text": "Sams.Connector.SAP.Source.Server, This connector allows you to get the entity coming from the Rfc Server Eventlistener     , attributes: id, FullName, configuration: Void", "title": "", "_id": 30}
{"text": "Sams.Connector.Sharepoint.Source.LibraryDocument, The Connector connects to a SharePoint site and browse a Library through a View. For each document the file is downloaded to a local temporary folder, deleted after treatment, and used as input entity.     , attributes: id, FullName, configuration: SiteURL, SubFolder, ListGuid, ViewGuid, LocalTemporaryFolder", "title": "", "_id": 31}
{"text": "Sams.Connector.Sharepoint.Source.LibraryDocumentProperties, The Connector connects to a SharePoint site and browse a Library through a View. For each document an Xml document is created with data[FileName, Url, LastModifiedDate, FileSize].     , attributes: id, FullName, configuration: SiteURL, SubFolder, ListGuid, ViewGuid", "title": "", "_id": 32}
{"text": "Sams.Connector.Soap.Source.Http, Call an Soap Webservice and return response     , attributes: id, FullName, configuration: URL, SoapEnvelop, Action, User, Password, Certificate, CertificateFile, CertificateFilePassword", "title": "", "_id": 33}
{"text": "Sams.Connector.Void.Source.Nop, The Connector ignore all incoming messages and do nothing.     , attributes: id, FullName, configuration: Void", "title": "", "_id": 34}
{"text": "Sams.Connector.Windows.Source.Wmi, The Connector is used to execute some simple Wmi queries.     , attributes: id, FullName, configuration: Query[], TimeOut", "title": "", "_id": 35}
{"text": "Sams.Processor.Database.Execute, This connector connects to any Database using a .Net Data Provider and executes a Execute statement and return the result. Input  entities  are  used  as  parameters.  The  connector  does  not  check  any  additional  security  constraints.If  deletion  is authorized for the user used, deletion can be executed from the SQL command.     , attributes: id, FullName, configuration: DatabaseProvider, ConnectionString, StoredProcedure, XslFilePath", "title": "", "_id": 36}
{"text": "Sams.Processor.Database.Select, This connector connects to any Database using a .Net Data Provider and executes a SELECT statement to fill new entities. Input entities are used as parameters or command text. The connector does not check any additional security constraints. If deletion is authorized for the user used, deletion can be executed from the SQL command.     , attributes: id, FullName, configuration: DatabaseProvider, ConnectionString, Query, XslFilePath", "title": "", "_id": 37}
{"text": "Sams.Processor.File.Filter, The Processor only keep files selected by filters for further treatments.     , attributes: id, FullName, configuration: OlderThan, Contain, NameContain, FileOrder, MoveToFirstPosition", "title": "", "_id": 38}
{"text": "Sams.Processor.OPC.ExecuteMethod(Customer Connector), Execute an OPC method based on the entity list and retrieve the output of the methods as the new entity     , attributes: id, FullName, configuration: Uri, SecurityMode, ByPassCertification", "title": "", "_id": 39}
{"text": "Sams.Processor.OPC.Read(Customer Connector), Read a sequence of OPC tags based on the entity list and retrieve the values as the new entity     , attributes: id, FullName, configuration: Uri, SecurityMode, ByPassCertification", "title": "", "_id": 40}
{"text": "Sams.Processor.OPC.Write(Customer Connector), Write into a list of OPC tags based on the entity and retrieve the status as a new entity     , attributes: id, FullName, configuration: Uri, SecurityMode, ByPassCertification", "title": "", "_id": 41}
{"text": "Sams.Processor.Oracle.Execute, This connector connects to any Database using a Oracle Data Provider and executes a Execute statement and return the result. Input entities are used as parameters. The connector does not check any additional security constraints.If deletion is authorized for the user used, deletion can be executed from the SQL command.     , attributes: id, FullName, configuration: ConnectionString, StoredProcedure, XslFilePath", "title": "", "_id": 42}
{"text": "Sams.Processor.Oracle.Select, This connector connects to any Database using a .Net Data Provider and executes a SELECT statement to fill new entities. Input entities are used as parameters or command text. The connector does not check any additional security constraints. If deletion is authorized for the user used, deletion can be executed from the SQL command.     , attributes: id, FullName, configuration: ConnectionString, Query, XslFilePath, XMLFormat", "title": "", "_id": 43}
{"text": "Sams.Processor.Xml.AddMetadata, The Processor add a new Root element to include the Entity itself and a second node for Metadata.     , attributes: id, FullName, configuration: ", "title": "", "_id": 44}
{"text": "Sams.Processor.Xml.Merge, The Processor Merge is used to merge many entities in same root element. You need to add all the source files in Sources connectors. Each Source file have to have a unique Id number.     , attributes: id, FullName, configuration: RootName", "title": "", "_id": 45}
{"text": "Sams.Processor.Xml.XPath, The  Processor  load  a  XPath  query  used  to  select  elements  from  the  orginial  message;  can  be  used  to  split  an  entity  in childreen entities. The orginal list is replaced by the result.     , attributes: id, FullName, configuration: XPath", "title": "", "_id": 46}
{"text": "Sams.Processor.Xml.Xsd, The Processor load a Xsd schema file and validate input entity. If entity is not validated, it is moved     , attributes: id, FullName, configuration: XsdFilePath, TargetNamespaceParameter, InvalidEntityRepository, StopTaskOnError, MoveInvalidFile", "title": "", "_id": 47}
{"text": "Sams.Processor.Xml.Dump, The Processor dump each entity as an XmlDocument using a unique filename.     , attributes: id, FullName, configuration: DumpFolder", "title": "", "_id": 48}
{"text": "Sams.Processor.Xml.Xsl, The Processor load an Xslt file and apply its transformation to the input entity. This processor does not allow generation of different output type (fo,html,csv, etc.).     , attributes: id, FullName, configuration: XslFilePath", "title": "", "_id": 49}
{"text": "Sams.Connector.ActiveMQ.Destination.Publisher, The Publisher send a message on a Appach Active MQ.     , attributes: id, FullName, configuration: Host, Port, Address, UserName, Password, PropertyXMLNode", "title": "", "_id": 50}
{"text": "Sams.Connector.AMQP.Destination.Sender, The connector to send a AMQP message to a queue     , attributes: id, FullName, configuration: Uri, Address", "title": "", "_id": 51}
{"text": "Sams.Connector.Database.Destination.Action, This  connector  connects  to  any  Database  using  a  .Net  Data  Provider  and  executes  the  entity  instructions.  The  connector check entity structure.     , attributes: id, FullName, configuration: DatabaseProvider, ConnectionString", "title": "", "_id": 52}
{"text": "Sams.Connector.Database.Destination.Enqueue, This connector enqueue into an oracle queue for message using a .Net Data Provide.     , attributes: id, FullName, configuration: DatabaseProvider, ConnectionString, Queue_name", "title": "", "_id": 53}
{"text": "Sams.Connector.Database.Destination.Execute, This  connector  connects  to  any  Database  using  a  .Net  Data  Provider  and  executes  a  stored  procedure  with  parameters received as entities. The connector does not check any additional security constraints.If deletion is authorized for the user used, deletion can be executed from the SQL command.     , attributes: id, FullName, configuration: DatabaseProvider, ConnectionString, StoredProcedure", "title": "", "_id": 54}
{"text": "Sams.Connector.eBR.Destination.Do, The Connector is a SIMATIC IT eBR Destination Connector. Entities are validated against internal Action Schema and used to do Action on eBR.     , attributes: id, FullName, configuration: DatabaseProvider, ConnectionString, InvalidEntityRepository, CheckExecutionTable", "title": "", "_id": 55}
{"text": "Sams.Connector.eBR.Destination.DoPG, The Connector is a SIMATIC IT eBR Destination Connector. Entities are validated against internal Action Schema and used to do Action on eBR.     , attributes: id, FullName, configuration: DatabaseProvider, ConnectionString, InvalidEntityRepository, CheckExecutionTable", "title": "", "_id": 56}
{"text": "Sams.Connector.eBR.Destination.eBRDoc, eBRDoc connector allows to print eBR data in a docx file.     , attributes: id, FullName, configuration: DatabaseProvider, LiveConnectionString, XsiConnectionString, STDName, ConfigurationFile, FileNameExpression, TagDateFormat, TagEntityIdFormat, IfExists", "title": "", "_id": 57}
{"text": "Sams.Connector.eBR.Destination.XsiDatabase, The Connector is a SIMATIC IT eBR XSI Destination Connector. Entities are validated against the internal XSI Schema and saved into XSI.     , attributes: id, FullName, configuration: DatabaseProvider, ConnectionString, InvalidEntityRepository", "title": "", "_id": 58}
{"text": "Sams.Connector.eBR.Destination.XsiPGDatabase, The Connector is a SIMATIC IT eBR XSI Destination Connector. Entities are validated against the internal XSI Schema and saved into XSI.     , attributes: id, FullName, configuration: DatabaseProvider, ConnectionString, InvalidEntityRepository", "title": "", "_id": 59}
{"text": "Sams.Connector.Email.Destination.SMTP, The Connector sends to a simple SMTP host all messages, one by one, after xslt transformation to HTML.     , attributes: id, FullName, configuration: SMTP_Host, XslFilePath, Sender_Address, Sender_Name, Recipient_Address, Recipient_Name, Subject", "title": "", "_id": 60}
{"text": "Sams.Connector.File.Destination.Json, The Connector append to a new UTF-8 Xml file each entities. If file does not exist, it is created     , attributes: id, FullName, configuration: FileNameExpression, TagDateFormat, TagEntityIdFormat, TagXPath, TagMetadataXPath, IfExists, PrintAfterCreation", "title": "", "_id": 61}
{"text": "Sams.Connector.File.Destination.MergePdf, The  Connector  copy  entity  files  in  destination  folder  and  can  delete  original  files.  You  need  to  add  all  the  source  files  in Sources connectors. Each Source file have to have a unique Id number.     , attributes: id, FullName, configuration: FileNameExpression, TagDateFormat, TagFromOriginalName, IfExists, DeleteAfterTreatment, PrintAfterCreation", "title": "", "_id": 62}
{"text": "Sams.Connector.File.Destination.Move, The Connector move a file to another location with the possibility to change the filename.     , attributes: id, FullName, configuration: DestinationFolder, FileNameExpression, TagDateFormat, TagEntityIdFormat, IfExists", "title": "", "_id": 63}
{"text": "Sams.Connector.File.Destination.Binary, The Connector copy entity files in destination folder and can delete original files. Note if the file exist in the destination folder, the previous file is replaced without prompt.     , attributes: id, FullName, configuration: FolderPath, DeleteAfterCopy, PrintAfterCreation", "title": "", "_id": 64}
{"text": "Sams.Connector.File.Destination.Any, The Connector append to a new UTF-8 Xml file each entities. If file does not exist, it is created     , attributes: id, FullName, configuration: FileNameExpression, TagDateFormat, TagEntityIdFormat, TagXPath, TagMetadataXPath, IfExists, XslFilePath, PrintAfterCreation", "title": "", "_id": 65}
{"text": "Sams.Connector.File.Destination.Pdf, The       Connector       creates       PDF       file.       For       implementation       use       the       documentation       here       : https://gitlab.com/jamescoyle/MigraDocXML/blob/master/Lessons.md     , attributes: id, FullName, configuration: FileNameExpression, TagDateFormat, TagEntityIdFormat, TagXPath, TagMetadataXPath, IfExists, XslFilePath, UserPassword, OwnerPassword, OwnerRestrictions, PrintAfterCreation", "title": "", "_id": 66}
{"text": "Sams.Connector.File.Destination.Text, The Connector appends to text file all messages after xslt transformation. It generates only one file. If file does not exist, it is created.  To  prevent  any  access  conflict,  all  write  operations  are  done  on  a  temporary  file,  with  tmpFile  extension.  Once preparation of the temporary file is over, it is renamed as destination file.     , attributes: id, FullName, configuration: FilePath, XslFilePath, CarriageReturn, CodePage, PrintAfterCreation", "title": "", "_id": 67}
{"text": "Sams.Connector.HTTP.Destination.Publisher, Publish a http request to the targeted webserver     , attributes: id, FullName, configuration: Uri, Username, Password, ContentType", "title": "", "_id": 68}
{"text": "Sams.Connector.Irc.Destination.Send, The Connector reads from input entity a IrcSend (see shcema) and send it to destinatino using IRC protocol as configured.     , attributes: id, FullName, configuration: Server, Port, NickName", "title": "", "_id": 69}
{"text": "Sams.Connector.MQTT.Destination.Publisher, The connector to send a mqtt message to a MQTT broker     , attributes: id, FullName, configuration: Host, Port, Protocol, Encryption, Client_ID, User_Name, User_Password, Topics, Encryption_Protocol, Base_Path, Proxy, ContentType, Keep_Alive_Send_Interval", "title": "", "_id": 70}
{"text": "Sams.Connector.Odata.Destination.PostPayload, The Connector reads the input envelop entity and connect the configure Http url. It send Soap envelop POST. It does not read the response stream.     , attributes: id, FullName, configuration: URL, ContentType, User, Password, X-CSRF-TOKEN, Cookies, ResponseArchiveFolder, ResponseFilename, TagDateFormat, TagXPathRequest", "title": "", "_id": 71}
{"text": "Sams.Connector.OPC.Destination.Write(Customer Connector), Writes OPC tags to the targeted OPC Server     , attributes: id, FullName, configuration: Uri, SecurityMode, ByPassCertification", "title": "", "_id": 72}
{"text": "Sams.Connector.Preactor.Destination.PCO, The Connector write entity as an attached document of a Preactor PCO Message.     , attributes: id, FullName, configuration: MsgHeaderTo, MsgHeaderLocation, MsgHeaderEventScript, MsgTarget, DestinationFolder, UseLockFile, AllInOne", "title": "", "_id": 73}
{"text": "Sams.Connector.Reporting.Destination.Docx, The Connector open a template docx file, do a mass Find&Replace using input entity and save result docx file. Filepath of the docx  used  as  template  is  part  of  input  entity.  This  document  contains  some  key  tags  like  ##MyTag2Replace##  or\n%%A_Tag%%. These tags will be replaced based on the entity data sent to the destination connector.     , attributes: id, FullName, configuration: ConvertToPdf, PrintAfterCreation", "title": "", "_id": 74}
{"text": "Sams.Connector.Reporting.Destination.Rdlc, The Connector generate a report based on a RDLC template file provided and using data from source file. Source file must follow the structure of :\n<Report>\n<Dataset Name=''>\n<Details>\n<A>ValueOfA</A>\n<B>ValueOfB<B/>\n</Details>\n</Dataset>\n</Report>\n<A></A> and <B></B> will become the columns names of the Dataset generated. Values inside A & B brackets will become the rows of the Dataset generated.\nMultiple <Dataset></Dataset> nodes are allowed.     , attributes: id, FullName, configuration: RdlcFilePath, OutputFormat, OutputFilePathExpression, TagDateFormat, TagEntityIdFormat, TagXPath, IfExists", "title": "", "_id": 75}
{"text": "Sams.Connector.SAP.Destination.RfcIdoc, This connector connects to SAP through RFC connection.     , attributes: id, FullName, configuration: AppServerHost, SystemNumber, SystemID, User, Password, Client, Language, PoolSize, InvalidEntityRepository", "title": "", "_id": 76}
{"text": "Sams.Connector.SAP.Destination.Rfc, This connector connects to SAP through RFC connection.     , attributes: id, FullName, configuration: AppServerHost, SystemNumber, SystemID, User, Password, Client, Language, PoolSize, ReturnFolder", "title": "", "_id": 77}
{"text": "Sams.Connector.Soap.Destination.Http, The Connector reads the input envelop entity and connect the configure Http url. It send Soap envelop POST. It does not read the response stream.     , attributes: id, FullName, configuration: URL, Action, User, Password, ResponseArchiveFolder, ResponseFilename, TagDateFormat, TagXPathRequest, TagXPathResponse, Certificate, CertificateFile, CertificateFilePassword, Headers", "title": "", "_id": 78}
{"text": "Sams.Connector.Void.Destination.StopProcess, The Connector ignore all incoming messages and stop its own process.     , attributes: id, FullName, configuration: ", "title": "", "_id": 79}
{"text": "Sams.Connector.Void.Destination.Nop, The Connector ignore all incoming messages and do nothing.     , attributes: id, FullName, configuration: ", "title": "", "_id": 80}
{"text": "Sams.Connector.Wcf.Destination.Http, The Connector reads from input entity an Http url to connect, connect and exit. It does not send data in POST. It does not read the response stream.     , attributes: id, FullName, configuration: ", "title": "", "_id": 81}
{"text": "Sams.Connector.Windows.Destination.StartProcess, The Connector start a new Windows Process described in the message received.     , attributes: id, FullName, configuration: OutputRedirectionFolder, TimeOut, UseShellExecute, Verb", "title": "", "_id": 82}